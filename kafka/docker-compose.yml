version: '3.9'
services:
  #ZOOKEEPER
  zoo:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - /opt/servidores/kafka/full-stack/zoo1/data:/data
      - /opt/servidores/kafka/full-stack/zoo1/datalog:/datalog
  #KAFKA -CONFLUENT
  kafka:
    image: confluentinc/cp-kafka:5.2.1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo
  #SCHEMA REGISTRY - CONFLUENT
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:5.2.1
    hostname: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo
      - kafka
  # TOOLS - Ferramentas para visualização
  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.4
    hostname: kafka-schema-registry-ui
    ports:
      - "8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
      PROXY: "true"
    depends_on:
      - kafka-schema-registry

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    hostname: kafka-topics-ui
    ports:
      - "8000:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
    depends_on:
      - zoo
      - kafka
      - kafka-schema-registry
    network_mode: bridge
    extra_hosts:
      - "kafka-rest-proxy:host-gateway"

  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    depends_on:
      - zoo
    ports:
      - "9000:9000"
    links:
      - zoo
    environment:
      ZK_HOSTS: zoo:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
  #KAFKA -REST PROXY
  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:5.2.1
    hostname: kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
    depends_on:
      - zoo
      - kafka
      - kafka-schema-registry
  #KAFKA -ksql-server
  ksql-server:
    image: confluentinc/cp-ksql-server:5.2.1
    hostname: ksql-server
    ports:
      - "8088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
      KSQL_LISTENERS: http://0.0.0.0:8088/
      KSQL_KSQL_SERVICE_ID: ksql-server_
    depends_on:
      - zoo
      - kafka
  # CONTAINER TEMPORARIO PARA INSERIR TOPICOS APOS SUA EXECUCAO ELE FINALIZARA
  init-kafka:
    image: confluentinc/cp-kafka:5.2.1
    depends_on:
      - kafka
      - zoo
    entrypoint: [ '/bin/bash', '-c' ]
    command: |
      " sleep 1m && \
      kafka-topics --zookeeper zoo:2181 --create --if-not-exists --topic topic_test --replication-factor 1 --partitions 1 && \
      kafka-topics --zookeeper zoo:2181 --create --if-not-exists --topic test_topic --replication-factor 1 --partitions 1"   

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
      - zoo
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: PLAINTEXT://kafka:19092